[env]
platform = ststm32
platform_packages =
    platformio/toolchain-gccarmnoneeabi@^1.140201.0
    platformio/tool-stlink
board = genericSTM32H725RGV
board_build.ldscript = ${platformio.boards_dir}/ldscripts/STM32H725XG_FLASH.ld
framework = arduino
;upload_protocol = dfu
upload_protocol = stlink
build_unflags =
    -std=gnu++17
build_flags =
    -std=gnu++20

; Hardware FPU
    -mcpu=cortex-m7
    -mthumb
    -mfpu=fpv5-d16
    -mfloat-abi=hard

; ARDUINO (BOARD SPECIFIC)
    -D ARDUINO_GENERIC_H725RGVX
    -D USE_PWR_DIRECT_SMPS_SUPPLY

; PLATFORMIO
    -D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
    -D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_SCANF
    -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
    -D PIO_FRAMEWORK_ARDUINO_USB_HIGHSPEED_FULLMODE

; FATFS MACROS
    "-D f_unmount(path)=f_mount(0, path, 0)"

; CMSIS RTOS V2
    -D configUSE_CMSIS_RTOS_V2=1
    -D configUSE_NEWLIB_REENTRANT=1
    -Wl,--wrap=delay

lib_deps =
    lib-xcore=https://gitlab.com/vtneil/lib-xcore.git
    FatFs=https://github.com/stm32duino/FatFs.git
    STM32SD=https://github.com/stm32duino/STM32SD.git
    STM32FreeRTOS=stm32duino/STM32duino FreeRTOS
    ADXL372=https://gitlab.com/vtneil/ADXL372.git
    BMP581=sparkfun/SparkFun BMP581 Arduino Library

[env:main]
build_src_filter =
    +<*.c>
    +<*.cpp>
    +<main/*.c>
    +<main/*.cpp>
